// <auto-generated />
using System;
using Analysis.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Analysis.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Analysis.Domain.Entities.CreditNote", b =>
                {
                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ClosedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("DebtorAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCountryCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("DebtorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorRegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorTown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DueDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("IssueDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("OpeningValue")
                        .HasColumnType("float");

                    b.Property<double>("PaidValue")
                        .HasColumnType("float");

                    b.HasKey("Reference");

                    b.ToTable("CreditNotes");
                });

            modelBuilder.Entity("Analysis.Domain.Entities.Invoice", b =>
                {
                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ClosedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("DebtorAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCountryCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("DebtorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorRegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorTown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DueDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("IssueDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("OpeningValue")
                        .HasColumnType("float");

                    b.Property<double>("PaidValue")
                        .HasColumnType("float");

                    b.HasKey("Reference");

                    b.ToTable("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
